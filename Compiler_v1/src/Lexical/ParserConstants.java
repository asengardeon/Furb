package Lexical;

public interface ParserConstants
{
    int START_SYMBOL = 50;

    int FIRST_NON_TERMINAL    = 50;
    int FIRST_SEMANTIC_ACTION = 74;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1 },
        { -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1,  2,  1, -1,  1, -1, -1,  2, -1, -1,  2 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1,  3, -1, -1, -1, -1, -1, -1 },
        { -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  5, -1,  5, -1, -1, -1,  4, -1, -1, -1, -1, -1, -1,  4,  5, -1,  5, -1, -1,  4, -1, -1,  4 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1,  6, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 13, -1, 13, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, 29, -1, -1, 29 },
        { -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 31, -1, 30, 30, 30, -1, -1, 31, -1, -1, -1, -1, -1, 31, -1, -1, 31 },
        { -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, 33, -1, -1, 34 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, 38, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 45, 51, 69, 36 },
        { 52 },
        {  0 },
        { 54, 21, 57, 19, 53 },
        {  0 },
        { 52 },
        { 55 },
        { 56 },
        { 43 },
        { 29 },
        { 27 },
        { 41, 22, 55, 24,  3, 23 },
        {  2, 58 },
        {  0 },
        { 24, 57 },
        { 57, 16, 73, 19 },
        { 46, 18, 57, 17, 19 },
        { 49, 18, 62, 17, 19 },
        { 73 },
        { 73, 24, 62 },
        { 33, 69, 28, 18, 73, 17, 64, 19 },
        { 30 },
        { 38 },
        { 40, 18, 73, 17, 69, 66, 37, 19 },
        {  0 },
        { 35, 69 },
        {  2, 20, 68, 19 },
        { 25, 18, 73, 24, 73, 17 },
        { 32, 18, 73, 17 },
        { 71, 70 },
        {  0 },
        { 69 },
        {  2, 72 },
        { 60 },
        { 61 },
        { 63 },
        { 65 },
        { 58, 16, 73, 19 },
        { 20, 68, 19 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado identificador",
        "Era esperado real",
        "Era esperado literal",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"^\"",
        "Era esperado \"==\"",
        "Era esperado \"~=\"",
        "Era esperado \"<=\"",
        "Era esperado \">=\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \"=\"",
        "Era esperado \")\"",
        "Era esperado \"(\"",
        "Era esperado \";\"",
        "Era esperado \".\"",
        "Era esperado \":\"",
        "Era esperado \"[\"",
        "Era esperado \"]\"",
        "Era esperado \",\"",
        "Era esperado ADD",
        "Era esperado AND",
        "Era esperado BOOLEAN",
        "Era esperado CASE",
        "Era esperado CHARACTER",
        "Era esperado CONTINUE",
        "Era esperado COUNT",
        "Era esperado DELETE",
        "Era esperado DO",
        "Era esperado ELEMENTOF",
        "Era esperado ELSE",
        "Era esperado END",
        "Era esperado ENDIF",
        "Era esperado EXIT",
        "Era esperado FALSE",
        "Era esperado IF",
        "Era esperado LIST",
        "Era esperado NOT",
        "Era esperado NUMBER",
        "Era esperado OR",
        "Era esperado PROGRAM",
        "Era esperado READ",
        "Era esperado SIZE",
        "Era esperado TRUE",
        "Era esperado WRITE",
        "<program> inválido",
        "<decvars> inválido",
        "<decvar> inválido",
        "<decvar1> inválido",
        "<tipos> inválido",
        "<tiposimples> inválido",
        "<tipolista> inválido",
        "<listaid> inválido",
        "<listaid1> inválido",
        "<atribuicao> inválido",
        "<entrada> inválido",
        "<saida> inválido",
        "<listaexp> inválido",
        "<loop> inválido",
        "<final> inválido",
        "<selecao> inválido",
        "<else> inválido",
        "<lista> inválido",
        "<listaaux> inválido",
        "<listacmd> inválido",
        "<listacmd1> inválido",
        "<comando> inválido",
        "<comando1> inválido",
        "<expressao> inválido"
    };
}
